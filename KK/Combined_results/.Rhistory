labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Difference" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 500 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
source( "~/Desktop/ncaaBracket.R")
?scale_x_continuous
plot1 <- ggplot( data = forestImp.df, aes( x = Importance, y = Statistic ) ) +
geom_point( color = "darkred" ) +
labs( title = paste0( "Variable Importance" ) ) +
ylab( "Variable" ) +
theme( axis.text.y = element_text( size = 5 ) ) +
scale_color_continuous( low = "navyblue", high = "darkred" ) +
scale_x_continuous( limits = c( 0, 850000 ), breaks = seq( from = 0, to = 850000, length.out = 10 )  ) +
theme( legend.position = "none" )
testResponse <- predict( forest, testingData )
testingResults <- data.frame( TotalPoints.Truth = testingData$PostSeasonTotalPoints, TotalPoints.Predicted = as.numeric( testResponse ) )
testingResults$Difference = testingData$PostSeasonTotalPoints - as.numeric( testResponse )
mu <- mean( testingResults$Difference )
std <- sd( testingResults$Difference )
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Difference" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 10 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot1 <- ggplot( data = forestImp.df, aes( x = Importance, y = Statistic ) ) +
geom_point( color = "darkred" ) +
labs( title = paste0( "Variable Importance" ) ) +
ylab( "Variable" ) +
theme( axis.text.y = element_text( size = 5 ) ) +
scale_color_continuous( low = "navyblue", high = "darkred" ) +
scale_x_continuous( limits = c( 0, 850000 ), breaks = seq( from = 0, to = 850000, length.out = 3 )  ) +
theme( legend.position = "none" )
testResponse <- predict( forest, testingData )
testingResults <- data.frame( TotalPoints.Truth = testingData$PostSeasonTotalPoints, TotalPoints.Predicted = as.numeric( testResponse ) )
testingResults$Difference = testingData$PostSeasonTotalPoints - as.numeric( testResponse )
mu <- mean( testingResults$Difference )
std <- sd( testingResults$Difference )
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Difference" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
source( "~/Desktop/ncaaBracket.R")
source( "~/Desktop/ncaaBracket.R")
?geom_text
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( label = "mu+1.95*sigma" ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes(7, .9, label="correct color", color="NA*") ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 50, 10, label = "mu", color = "darkred" ) ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 50, 30, label = "mu", color = "darkred" ), parse=TRUE ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 50, mu, label = "mu", color = "darkred" ), parse=TRUE, size = 2 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 50, mu+10, label = "mu", color = "darkred" ), parse=TRUE, size = 5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 50, mu+20, label = "mu" ), parse=TRUE, color = "darkred" , size = 5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20, label = "mu" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + 1.95 sigma" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - 1.95 sigma" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + sigma" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - sigma" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu, label = "mu" ), parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 1.95*std, mu - 1.95*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20 ), label = "mu", parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
mu <- mean( testingResults$Difference )
std <- sd( testingResults$Difference )
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 2*std, mu - 2*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20 ), label = "mu", parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 2*std, mu - 2*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 0, mu+20 ), label = "mu", parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 0, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 0, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( -10, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 2*std, mu - 2*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 20, mu+20 ), label = "mu", parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 20, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 20, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( 0, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
plot2 <- ggplot( data = testingResults, aes( x = TotalPoints.Truth, y = Difference ) ) +
geom_hline( yintercept = mu, color = "darkred", size = 1, alpha = 1.0 ) +
geom_hline( yintercept = c( mu + 2*std, mu - 2*std ), color = "navyblue", linetype = "dashed", size = 0.5, alpha = 1.0 ) +
geom_point() +
geom_text( aes( 0, mu+20 ), label = "mu", parse=TRUE, color = "darkred" , size = 3.5 ) +
geom_text( aes( 0, mu+20+1.95*std, label = "mu + 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
geom_text( aes( 0, mu+20-1.95*std, label = "mu - 2 * sigma" ), parse=TRUE, color = "navyblue" , size = 3.5 ) +
labs( title = paste0( y, " Postseason Total Points" ) ) +
ylab( "Truth - Predicted" ) +
xlab( "Truth" ) +
scale_x_continuous( limits = c( -20, 550 ), breaks = seq( from = 0, to = 550, length.out = 3 ) ) +
scale_y_continuous( limits = c( -250, 250 ) ) +
theme( legend.position = "none" )
pdf( paste0( "/Users/ntustison/Desktop/plot_", y, ".pdf" ), width = 8, height = 4 )
arrange_ggplot2( plot2, plot1, ncol = 2 )
dev.off()
?geom_point
source( "~/Desktop/ncaaBracket.R")
( 1/0.25 )^(1/3)
1/1.587
install.packages( "ape")
tr <- read.tree(text = "((Homo,Pan),Gorilla);")
plot(tr)
nodelabels("7.3 Ma", 4, frame = "r", bg = "yellow", adj = 0)
nodelabels("5.4 Ma", 5, frame = "c", bg = "tomato", font = 3)
data(bird.orders)
plot(bird.orders, use.edge.length = FALSE, font = 1)
bs <- round(runif(22, 90, 100), 0) # some imaginary bootstrap values
bs2 <- round(runif(22, 90, 100), 0)
bs3 <- round(runif(22, 90, 100), 0)
nodelabels(bs, adj = 1.2)
nodelabels(bs2, adj = -0.2, bg = "yellow")
library( ape )
tr <- read.tree(text = "((Homo,Pan),Gorilla);")
plot(tr)
nodelabels("7.3 Ma", 4, frame = "r", bg = "yellow", adj = 0)
nodelabels("5.4 Ma", 5, frame = "c", bg = "tomato", font = 3)
data(bird.orders)
plot(bird.orders, use.edge.length = FALSE, font = 1)
bs <- round(runif(22, 90, 100), 0) # some imaginary bootstrap values
bs2 <- round(runif(22, 90, 100), 0)
bs3 <- round(runif(22, 90, 100), 0)
nodelabels(bs, adj = 1.2)
nodelabels(bs2, adj = -0.2, bg = "yellow")
plot(bird.orders, use.edge.length = FALSE, font = 1)
nodelabels(bs, adj = -0.2, frame = "n", cex = 0.8)
nodelabels(bs2, adj = c(1.2, 1), frame = "n", cex = 0.8)
nodelabels(bs3, adj = c(1.2, -0.2), frame = "n", cex = 0.8)
plot(bird.orders, use.edge.length = FALSE, font = 1)
nodelabels(bs, adj = -0.2, frame = "n", cex = 0.8, font = 2)
nodelabels(bs2, adj = c(1.2, 1), frame = "n", cex = 0.8, font = 3)
nodelabels(bs3, adj = c(1.2, -0.2), frame = "n", cex = 0.8)
plot(bird.orders, "c", use.edge.length = FALSE, font = 1)
nodelabels(thermo = runif(22), cex = .8)
plot(bird.orders, "u", FALSE, font = 1, lab4ut = "a")
nodelabels(cex = .75, bg = "yellow")
plot(bird.orders, "c", FALSE, font = 1, label.offset = 3,
x.lim = 31, no.margin = TRUE)
tiplabels(pch = 21, bg = gray(1:23/23), cex = 2, adj = 1.4)
tiplabels(pch = 19, col = c("yellow", "red", "blue"), adj = 2.5, cex = 2)
### This can be used to highlight tip labels:
plot(bird.orders, font = 1)
i <- c(1, 7, 18)
tiplabels(bird.orders$tip.label[i], i, adj = 0)
### Some random data to compare piecharts and thermometres:
tr <- rtree(15)
x <- runif(14, 0, 0.33)
y <- runif(14, 0, 0.33)
z <- runif(14, 0, 0.33)
x <- cbind(x, y, z, 1 - x - y - z)
layout(matrix(1:2, 1, 2))
plot(tr, "c", FALSE, no.margin = TRUE)
nodelabels(pie = x, cex = 1.3)
text(4.5, 15, "Are you \"pie\"...", font = 4, cex = 1.5)
plot(tr, "c", FALSE, no.margin = TRUE)
nodelabels(thermo = x, col = rainbow(4), cex = 1.3)
text(4.5, 15, "... or \"thermo\"?", font = 4, cex = 1.5)
layout(matrix(1))
plot(tr, main = "Showing Edge Lengths")
edgelabels(round(tr$edge.length, 3), srt = 90)
plot(tr, "p", FALSE)
edgelabels("above", adj = c(0.5, -0.25), bg = "yellow")
edgelabels("below", adj = c(0.5, 1.25), bg = "lightblue")
rtree( 15 )
tr <- read.tree(text = "((Homo,Pan),Gorilla);")
tr
?read.tree
plot(tr, "c", FALSE, no.margin = TRUE)
tr <- read.tree(text = "(((ChampMidwest,ChampWest),Final1,(ChampEast,ChampSouth),Final2),Champion);")
plot(tr, "c", FALSE, no.margin = TRUE)
tr <- read.tree(text = "(((ChampMidwest,ChampWest)Final1,(ChampEast,ChampSouth),Final2)Champion);")
tr <- read.tree(text = "((Final1,Final2),Champion);")
plot(tr, "c", FALSE, no.margin = TRUE)
?nodelabels
tr <- read.tree(text = "((Homo,Pan),Gorilla);")
plot(tr)
nodelabels("7.3 Ma", 4, frame = "r", bg = "yellow", adj = 0)
nodelabels("5.4 Ma", 5, frame = "c", bg = "tomato", font = 3)
tr <- read.tree(text = "((Final1,Final2),Champion);")
plot(tr)
odelabels("7.3 Ma", 4, frame = "r", bg = "yellow", adj = 0)
nodelabels("7.3 Ma", 4, frame = "r", bg = "yellow", adj = 0)
tr <- read.tree(text = "((Final1,Final2),(Final3,Final4),Champion);")
plot(tr)
tr <- read.tree(text = "(((QF1,QF2),Final1,Final2),(Final3,Final4),Champion);")
plot(tr)
tr <- read.tree(text = "((((QF1,QF2),Final1),Final2),(Final3,Final4),Champion);")
plot(tr)
tr <- read.tree(text = "((Louisville,Alabama St),Louisville),((Ohio State,Siena),Ohio State);")
plot(tr)
plot(tr)
tr <- read.tree(text = "((Louisville,Alabama St),Louisville);")
plot(tr)
tr <- read.tree(text = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(text = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(text = "~/Desktop/ncaaTree.txt")
plot(tr)
?read.tree
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
tr <- read.tree(file = "~/Desktop/ncaaTree.txt")
plot(tr)
commandArgs
commandArgs
?commandArgs
brats <- read.table( "~/Desktop/brats.csv")
colnames( brats ) <- c( "subject", "edema", "tumor")
brats
brats <- read.csv( "~/Desktop/brats.csv", header =FALSE )
brats
colnames( brats ) <- c( "subject", "edema", "tumor")
mean( brats$edema )
mean( brats$tumor )
?median
median( brats$tumor )
median( brats$edema )
t <- read.csv( "~/Desktop/test.csv")
t
median( t$edema )
median( t$Edema )
mean( t$Edema )
mean( t$Tumor )
sd( t$Tumor )
sd( t$Tumor )
sd( t$Edema )
?inv
?inverse
?t
?as.matrix
m <- as.matrix( data = c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3, byrow = FALSE )
m <- as.matrix( c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3, byrow = FALSE )
m
m <- as.matrix( c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3 )
m
m <- matrix( c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3 )
m
ginv( m )
install.packages( 'MASS')
ginv( m )
library( MASS )
ginv( m )
m <- matrix( c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3, bryow = TRUE )
m <- matrix( c( 0, 0, -1, 1, 0, 0, 0, 1, 0 ), nrow = 3, ncol = 3, byrow = TRUE )
m
ginv( m )
133 + 179
1.225 * 1.225
73.4*2.2
73.2*2.2
pi/2
pi/4
t <- read.csv( "/Users/ntustison/Documents/Academic/SubmittedPapers/Conferences/ISMRM2013/results3.csv")
t
mean( t$XenonDefectVolumeRatio )
mean( t$HeliumDefectVolumeRatio )
?t.test
t.test( x = t$XenonDefectVolumeRatio, y = t$HeliumDefectVolumeRatio, alternative = "two.sided", paired = TRUE )
t.test( x = t$XenonDefectVolumeRatio, y = t$HeliumDefectVolumeRatio, alternative = "greater", paired = TRUE )
t <- read.csv( "/Users/ntustison/Documents/Academic/SubmittedPapers/Conferences/ISMRM2013/results3.csv")
t.test( x = t$XenonDefectVolumeRatio, y = t$HeliumDefectVolumeRatio, alternative = "greater", paired = TRUE )
stats <- read.csv( "/Users/ntustison/Documents/Academic/SubmittedPapers/Conferences/ISMRM2013/HeXeResults2.csv", header = TRUE );
stats
stats <- read.csv( "/Users/ntustison/Documents/Academic/SubmittedPapers/Conferences/ISMRM2013/HeXeResults2.csv", header = FALSE );
stats
t.test( stats$V2, alternative = "greater" )
install.packages(c("caret", "cluster", "colorspace", "devtools", "dichromat", "digest", "foreign", "ggplot2", "gtools", "inline", "KernSmooth", "knitr", "lattice", "magic", "Matrix", "misc3d", "nlme", "nnet", "oro.nifti", "pcaPP", "plotrix", "Rcpp", "RCurl", "rgl", "rJava", "robust", "robustbase", "rpart", "sandwich", "signal", "survival", "timeSeries", "XML"))
install.packages( "ggplot2")
install.packages( "randomForest")
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?randomForest
?library()
?require()
r <- c( 1, 2, 3, 4, 5, 6 )
s <- c( 2, 3, 4, 5, 6, 7 )
r / s
setwd( "~/Documents/Academic/Papers/SPIE2013/KK/Combined_results/")
source( "asymmetry.R")
min( results$AGE )
min( results$SEX )
max( results$AGE )
results$AGE
?sort
sort( results$AGE )
length( sort( results$AGE ) )
length( sort( results[[1]]$AGE ) )
length( sort( resultsX[[1]]$AGE ) )
sort( resultsX[[1]]$AGE )
